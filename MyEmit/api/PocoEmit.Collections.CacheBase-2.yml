### YamlMime:ManagedReference
items:
- uid: PocoEmit.Collections.CacheBase`2
  commentId: T:PocoEmit.Collections.CacheBase`2
  id: CacheBase`2
  parent: PocoEmit.Collections
  children:
  - PocoEmit.Collections.CacheBase`2.#ctor
  - PocoEmit.Collections.CacheBase`2.#ctor(PocoEmit.Collections.ICacher{`0,`1})
  - PocoEmit.Collections.CacheBase`2.ContainsKey(`0)
  - PocoEmit.Collections.CacheBase`2.CreateNew(`0)
  - PocoEmit.Collections.CacheBase`2.Get(`0)
  - PocoEmit.Collections.CacheBase`2.Set(`0,`1)
  - PocoEmit.Collections.CacheBase`2.TryGetValue(`0,`1@)
  langs:
  - csharp
  - vb
  name: CacheBase<TKey, TValue>
  nameWithType: CacheBase<TKey, TValue>
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>
  type: Class
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: CacheBase
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 11
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 缓存基类
  example: []
  syntax:
    content: 'public abstract class CacheBase<TKey, TValue> : ICacher<TKey, TValue>, IStore<TKey, TValue>'
    typeParameters:
    - id: TKey
      description: ''
    - id: TValue
      description: ''
    content.vb: Public MustInherit Class CacheBase(Of TKey, TValue) Implements ICacher(Of TKey, TValue), IStore(Of TKey, TValue)
  inheritance:
  - System.Object
  derivedClasses:
  - PocoEmit.Collections.MemberReaderCacher
  - PocoEmit.Collections.MemberWriterCacher
  - PocoEmit.Collections.TypeMemberCacher
  - PocoEmit.Configuration.PrimitiveConfiguration
  - PocoEmit.Converters.ConverterFactory
  - PocoEmit.Copies.CopierFactory
  implements:
  - PocoEmit.Collections.ICacher{{TKey},{TValue}}
  - PocoEmit.Collections.IStore{{TKey},{TValue}}
  nameWithType.vb: CacheBase(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue)
  name.vb: CacheBase(Of TKey, TValue)
- uid: PocoEmit.Collections.CacheBase`2.#ctor(PocoEmit.Collections.ICacher{`0,`1})
  commentId: M:PocoEmit.Collections.CacheBase`2.#ctor(PocoEmit.Collections.ICacher{`0,`1})
  id: '#ctor(PocoEmit.Collections.ICacher{`0,`1})'
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: CacheBase(ICacher<TKey, TValue>)
  nameWithType: CacheBase<TKey, TValue>.CacheBase(ICacher<TKey, TValue>)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.CacheBase(PocoEmit.Collections.ICacher<TKey, TValue>)
  type: Constructor
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: .ctor
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 11
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 缓存基类
  example: []
  syntax:
    content: protected CacheBase(ICacher<TKey, TValue> cacher)
    parameters:
    - id: cacher
      type: PocoEmit.Collections.ICacher{{TKey},{TValue}}
    content.vb: Protected Sub New(cacher As ICacher(Of TKey, TValue))
  overload: PocoEmit.Collections.CacheBase`2.#ctor*
  nameWithType.vb: CacheBase(Of TKey, TValue).New(ICacher(Of TKey, TValue))
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).New(PocoEmit.Collections.ICacher(Of TKey, TValue))
  name.vb: New(ICacher(Of TKey, TValue))
- uid: PocoEmit.Collections.CacheBase`2.#ctor
  commentId: M:PocoEmit.Collections.CacheBase`2.#ctor
  id: '#ctor'
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: CacheBase()
  nameWithType: CacheBase<TKey, TValue>.CacheBase()
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.CacheBase()
  type: Constructor
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: .ctor
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 17
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 缓存基类
  example: []
  syntax:
    content: public CacheBase()
    content.vb: Public Sub New()
  overload: PocoEmit.Collections.CacheBase`2.#ctor*
  nameWithType.vb: CacheBase(Of TKey, TValue).New()
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).New()
  name.vb: New()
- uid: PocoEmit.Collections.CacheBase`2.Get(`0)
  commentId: M:PocoEmit.Collections.CacheBase`2.Get(`0)
  id: Get(`0)
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: Get(TKey)
  nameWithType: CacheBase<TKey, TValue>.Get(TKey)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.Get(TKey)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: Get
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 33
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 获取
  example: []
  syntax:
    content: public virtual TValue Get(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: '{TValue}'
      description: ''
    content.vb: Public Overridable Function [Get](key As TKey) As TValue
  overload: PocoEmit.Collections.CacheBase`2.Get*
  nameWithType.vb: CacheBase(Of TKey, TValue).Get(TKey)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).Get(TKey)
- uid: PocoEmit.Collections.CacheBase`2.ContainsKey(`0)
  commentId: M:PocoEmit.Collections.CacheBase`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: CacheBase<TKey, TValue>.ContainsKey(TKey)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: ContainsKey
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 51
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 判断是否存在
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
  overload: PocoEmit.Collections.CacheBase`2.ContainsKey*
  implements:
  - PocoEmit.Collections.ICacher{{TKey},{TValue}}.ContainsKey({TKey})
  nameWithType.vb: CacheBase(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).ContainsKey(TKey)
- uid: PocoEmit.Collections.CacheBase`2.TryGetValue(`0,`1@)
  commentId: M:PocoEmit.Collections.CacheBase`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: CacheBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: TryGetValue
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 54
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 获取
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    - id: value
      type: '{TValue}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: PocoEmit.Collections.CacheBase`2.TryGetValue*
  implements:
  - PocoEmit.Collections.ICacher{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  nameWithType.vb: CacheBase(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: PocoEmit.Collections.CacheBase`2.Set(`0,`1)
  commentId: M:PocoEmit.Collections.CacheBase`2.Set(`0,`1)
  id: Set(`0,`1)
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: Set(TKey, TValue)
  nameWithType: CacheBase<TKey, TValue>.Set(TKey, TValue)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.Set(TKey, TValue)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: Set
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 57
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 设置
  example: []
  syntax:
    content: public void Set(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    - id: value
      type: '{TValue}'
      description: ''
    content.vb: Public Sub [Set](key As TKey, value As TValue)
  overload: PocoEmit.Collections.CacheBase`2.Set*
  implements:
  - PocoEmit.Collections.IStore{{TKey},{TValue}}.Set({TKey},{TValue})
  nameWithType.vb: CacheBase(Of TKey, TValue).Set(TKey, TValue)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).Set(TKey, TValue)
- uid: PocoEmit.Collections.CacheBase`2.CreateNew(`0)
  commentId: M:PocoEmit.Collections.CacheBase`2.CreateNew(`0)
  id: CreateNew(`0)
  parent: PocoEmit.Collections.CacheBase`2
  langs:
  - csharp
  - vb
  name: CreateNew(TKey)
  nameWithType: CacheBase<TKey, TValue>.CreateNew(TKey)
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.CreateNew(TKey)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/CacheBase.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: CreateNew
    path: ../PocoEmit/Collections/CacheBase.cs
    startLine: 64
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 构造新值
  example: []
  syntax:
    content: protected abstract TValue CreateNew(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: '{TValue}'
      description: ''
    content.vb: Protected MustOverride Function CreateNew(key As TKey) As TValue
  overload: PocoEmit.Collections.CacheBase`2.CreateNew*
  nameWithType.vb: CacheBase(Of TKey, TValue).CreateNew(TKey)
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).CreateNew(TKey)
references:
- uid: PocoEmit.Collections
  commentId: N:PocoEmit.Collections
  href: PocoEmit.html
  name: PocoEmit.Collections
  nameWithType: PocoEmit.Collections
  fullName: PocoEmit.Collections
  spec.csharp:
  - uid: PocoEmit
    name: PocoEmit
    href: PocoEmit.html
  - name: .
  - uid: PocoEmit.Collections
    name: Collections
    href: PocoEmit.Collections.html
  spec.vb:
  - uid: PocoEmit
    name: PocoEmit
    href: PocoEmit.html
  - name: .
  - uid: PocoEmit.Collections
    name: Collections
    href: PocoEmit.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: PocoEmit.Collections.ICacher{{TKey},{TValue}}
  commentId: T:PocoEmit.Collections.ICacher{`0,`1}
  parent: PocoEmit.Collections
  definition: PocoEmit.Collections.ICacher`2
  href: PocoEmit.Collections.ICacher-2.html
  name: ICacher<TKey, TValue>
  nameWithType: ICacher<TKey, TValue>
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>
  nameWithType.vb: ICacher(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue)
  name.vb: ICacher(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher`2
    name: ICacher
    href: PocoEmit.Collections.ICacher-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.ICacher`2
    name: ICacher
    href: PocoEmit.Collections.ICacher-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore{{TKey},{TValue}}
  commentId: T:PocoEmit.Collections.IStore{`0,`1}
  parent: PocoEmit.Collections
  definition: PocoEmit.Collections.IStore`2
  href: PocoEmit.Collections.IStore-2.html
  name: IStore<TKey, TValue>
  nameWithType: IStore<TKey, TValue>
  fullName: PocoEmit.Collections.IStore<TKey, TValue>
  nameWithType.vb: IStore(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue)
  name.vb: IStore(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: PocoEmit.Collections.ICacher`2
  commentId: T:PocoEmit.Collections.ICacher`2
  href: PocoEmit.Collections.ICacher-2.html
  name: ICacher<TKey, TValue>
  nameWithType: ICacher<TKey, TValue>
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>
  nameWithType.vb: ICacher(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue)
  name.vb: ICacher(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher`2
    name: ICacher
    href: PocoEmit.Collections.ICacher-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.ICacher`2
    name: ICacher
    href: PocoEmit.Collections.ICacher-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore`2
  commentId: T:PocoEmit.Collections.IStore`2
  href: PocoEmit.Collections.IStore-2.html
  name: IStore<TKey, TValue>
  nameWithType: IStore<TKey, TValue>
  fullName: PocoEmit.Collections.IStore<TKey, TValue>
  nameWithType.vb: IStore(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue)
  name.vb: IStore(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.CacheBase`2.#ctor*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.#ctor
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2__ctor_PocoEmit_Collections_ICacher__0__1__
  name: CacheBase
  nameWithType: CacheBase<TKey, TValue>.CacheBase
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.CacheBase
  nameWithType.vb: CacheBase(Of TKey, TValue).New
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).New
  name.vb: New
- uid: PocoEmit.Collections.CacheBase`2.Get*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.Get
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2_Get__0_
  name: Get
  nameWithType: CacheBase<TKey, TValue>.Get
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.Get
  nameWithType.vb: CacheBase(Of TKey, TValue).Get
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).Get
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: PocoEmit.Collections.CacheBase`2.ContainsKey*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.ContainsKey
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: CacheBase<TKey, TValue>.ContainsKey
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.ContainsKey
  nameWithType.vb: CacheBase(Of TKey, TValue).ContainsKey
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).ContainsKey
- uid: PocoEmit.Collections.ICacher{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:PocoEmit.Collections.ICacher{`0,`1}.ContainsKey(`0)
  parent: PocoEmit.Collections.ICacher{{TKey},{TValue}}
  definition: PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  name: ContainsKey(TKey)
  nameWithType: ICacher<TKey, TValue>.ContainsKey(TKey)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ICacher(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.ICacher{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  commentId: M:PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  name: ContainsKey(TKey)
  nameWithType: ICacher<TKey, TValue>.ContainsKey(TKey)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ICacher(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher`2.ContainsKey(`0)
    name: ContainsKey
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.ICacher`2.ContainsKey(`0)
    name: ContainsKey
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: PocoEmit.Collections.CacheBase`2.TryGetValue*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.TryGetValue
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: CacheBase<TKey, TValue>.TryGetValue
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.TryGetValue
  nameWithType.vb: CacheBase(Of TKey, TValue).TryGetValue
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).TryGetValue
- uid: PocoEmit.Collections.ICacher{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:PocoEmit.Collections.ICacher{`0,`1}.TryGetValue(`0,`1@)
  parent: PocoEmit.Collections.ICacher{{TKey},{TValue}}
  definition: PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  name: TryGetValue(TKey, out TValue)
  nameWithType: ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.ICacher{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  commentId: M:PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  name: TryGetValue(TKey, out TValue)
  nameWithType: ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
    name: TryGetValue
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
    name: TryGetValue
    href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.CacheBase`2.Set*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.Set
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2_Set__0__1_
  name: Set
  nameWithType: CacheBase<TKey, TValue>.Set
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.Set
  nameWithType.vb: CacheBase(Of TKey, TValue).Set
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).Set
- uid: PocoEmit.Collections.IStore{{TKey},{TValue}}.Set({TKey},{TValue})
  commentId: M:PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
  parent: PocoEmit.Collections.IStore{{TKey},{TValue}}
  definition: PocoEmit.Collections.IStore`2.Set(`0,`1)
  href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  name: Set(TKey, TValue)
  nameWithType: IStore<TKey, TValue>.Set(TKey, TValue)
  fullName: PocoEmit.Collections.IStore<TKey, TValue>.Set(TKey, TValue)
  nameWithType.vb: IStore(Of TKey, TValue).Set(TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue).Set(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
  commentId: M:PocoEmit.Collections.IStore`2.Set(`0,`1)
  href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  name: Set(TKey, TValue)
  nameWithType: IStore<TKey, TValue>.Set(TKey, TValue)
  fullName: PocoEmit.Collections.IStore<TKey, TValue>.Set(TKey, TValue)
  nameWithType.vb: IStore(Of TKey, TValue).Set(TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue).Set(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.CacheBase`2.CreateNew*
  commentId: Overload:PocoEmit.Collections.CacheBase`2.CreateNew
  href: PocoEmit.Collections.CacheBase-2.html#PocoEmit_Collections_CacheBase_2_CreateNew__0_
  name: CreateNew
  nameWithType: CacheBase<TKey, TValue>.CreateNew
  fullName: PocoEmit.Collections.CacheBase<TKey, TValue>.CreateNew
  nameWithType.vb: CacheBase(Of TKey, TValue).CreateNew
  fullName.vb: PocoEmit.Collections.CacheBase(Of TKey, TValue).CreateNew
