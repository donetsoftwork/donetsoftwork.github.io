### YamlMime:ManagedReference
items:
- uid: PocoEmit.Collections.ICacher`2
  commentId: T:PocoEmit.Collections.ICacher`2
  id: ICacher`2
  parent: PocoEmit.Collections
  children:
  - PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  - PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  langs:
  - csharp
  - vb
  name: ICacher<TKey, TValue>
  nameWithType: ICacher<TKey, TValue>
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>
  type: Interface
  source:
    remote:
      path: PocoEmit/Collections/ICacher~2.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: ICacher
    path: ../PocoEmit/Collections/ICacher~2.cs
    startLine: 7
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 数据缓存
  example: []
  syntax:
    content: 'public interface ICacher<TKey, TValue> : IStore<TKey, TValue>'
    typeParameters:
    - id: TKey
      description: ''
    - id: TValue
      description: ''
    content.vb: Public Interface ICacher(Of TKey, TValue) Inherits IStore(Of TKey, TValue)
  inheritedMembers:
  - PocoEmit.Collections.IStore{{TKey},{TValue}}.Set({TKey},{TValue})
  nameWithType.vb: ICacher(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue)
  name.vb: ICacher(Of TKey, TValue)
- uid: PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  commentId: M:PocoEmit.Collections.ICacher`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: PocoEmit.Collections.ICacher`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: ICacher<TKey, TValue>.ContainsKey(TKey)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/ICacher~2.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: ContainsKey
    path: ../PocoEmit/Collections/ICacher~2.cs
    startLine: 15
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 判断是否存在
  example: []
  syntax:
    content: bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsKey(key As TKey) As Boolean
  overload: PocoEmit.Collections.ICacher`2.ContainsKey*
  nameWithType.vb: ICacher(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).ContainsKey(TKey)
- uid: PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  commentId: M:PocoEmit.Collections.ICacher`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: PocoEmit.Collections.ICacher`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: PocoEmit/Collections/ICacher~2.cs
      branch: main
      repo: https://github.com/donetsoftwork/MyEmit.git
    id: TryGetValue
    path: ../PocoEmit/Collections/ICacher~2.cs
    startLine: 22
  assemblies:
  - PocoEmit
  namespace: PocoEmit.Collections
  summary: 获取
  example: []
  syntax:
    content: bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    - id: value
      type: '{TValue}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: PocoEmit.Collections.ICacher`2.TryGetValue*
  nameWithType.vb: ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
references:
- uid: PocoEmit.Collections
  commentId: N:PocoEmit.Collections
  href: PocoEmit.html
  name: PocoEmit.Collections
  nameWithType: PocoEmit.Collections
  fullName: PocoEmit.Collections
  spec.csharp:
  - uid: PocoEmit
    name: PocoEmit
    href: PocoEmit.html
  - name: .
  - uid: PocoEmit.Collections
    name: Collections
    href: PocoEmit.Collections.html
  spec.vb:
  - uid: PocoEmit
    name: PocoEmit
    href: PocoEmit.html
  - name: .
  - uid: PocoEmit.Collections
    name: Collections
    href: PocoEmit.Collections.html
- uid: PocoEmit.Collections.IStore{{TKey},{TValue}}.Set({TKey},{TValue})
  commentId: M:PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
  parent: PocoEmit.Collections.IStore{{TKey},{TValue}}
  definition: PocoEmit.Collections.IStore`2.Set(`0,`1)
  href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  name: Set(TKey, TValue)
  nameWithType: IStore<TKey, TValue>.Set(TKey, TValue)
  fullName: PocoEmit.Collections.IStore<TKey, TValue>.Set(TKey, TValue)
  nameWithType.vb: IStore(Of TKey, TValue).Set(TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue).Set(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.IStore{`0,`1}.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
  commentId: M:PocoEmit.Collections.IStore`2.Set(`0,`1)
  href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  name: Set(TKey, TValue)
  nameWithType: IStore<TKey, TValue>.Set(TKey, TValue)
  fullName: PocoEmit.Collections.IStore<TKey, TValue>.Set(TKey, TValue)
  nameWithType.vb: IStore(Of TKey, TValue).Set(TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue).Set(TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2.Set(`0,`1)
    name: Set
    href: PocoEmit.Collections.IStore-2.html#PocoEmit_Collections_IStore_2_Set__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore{{TKey},{TValue}}
  commentId: T:PocoEmit.Collections.IStore{`0,`1}
  parent: PocoEmit.Collections
  definition: PocoEmit.Collections.IStore`2
  href: PocoEmit.Collections.IStore-2.html
  name: IStore<TKey, TValue>
  nameWithType: IStore<TKey, TValue>
  fullName: PocoEmit.Collections.IStore<TKey, TValue>
  nameWithType.vb: IStore(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue)
  name.vb: IStore(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.IStore`2
  commentId: T:PocoEmit.Collections.IStore`2
  href: PocoEmit.Collections.IStore-2.html
  name: IStore<TKey, TValue>
  nameWithType: IStore<TKey, TValue>
  fullName: PocoEmit.Collections.IStore<TKey, TValue>
  nameWithType.vb: IStore(Of TKey, TValue)
  fullName.vb: PocoEmit.Collections.IStore(Of TKey, TValue)
  name.vb: IStore(Of TKey, TValue)
  spec.csharp:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: PocoEmit.Collections.IStore`2
    name: IStore
    href: PocoEmit.Collections.IStore-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PocoEmit.Collections.ICacher`2.ContainsKey*
  commentId: Overload:PocoEmit.Collections.ICacher`2.ContainsKey
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: ICacher<TKey, TValue>.ContainsKey
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.ContainsKey
  nameWithType.vb: ICacher(Of TKey, TValue).ContainsKey
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).ContainsKey
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: PocoEmit.Collections.ICacher`2.TryGetValue*
  commentId: Overload:PocoEmit.Collections.ICacher`2.TryGetValue
  href: PocoEmit.Collections.ICacher-2.html#PocoEmit_Collections_ICacher_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: ICacher<TKey, TValue>.TryGetValue
  fullName: PocoEmit.Collections.ICacher<TKey, TValue>.TryGetValue
  nameWithType.vb: ICacher(Of TKey, TValue).TryGetValue
  fullName.vb: PocoEmit.Collections.ICacher(Of TKey, TValue).TryGetValue
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
